<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="javax.crypto.SecretKey"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.security.Keys"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="java.time.Duration"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.Header"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.SignatureAlgorithm"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.header.Header"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Header"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Claims"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.SecurityProperties.User"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="java.lang.SecurityException"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.security.SecurityException"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.MalformedJwtException"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.ExpiredJwtException"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.UnsupportedJwtException"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="kr.ch11.jwt.JwtAuthenticatonFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.ToString"/>
    <fullyQualifiedTypeName name="kr.ch11.dto.UserRequestDTO"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestAttribute"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="kr.ch11.security.MyUserDetails"/>
    <fullyQualifiedTypeName name="kr.ch11.entity.UserEntity"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="kr.ch11.jwt.JwtProvider"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="lombok.extern.log4j.Log4j2"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.userinfo.DefaultOAuth2UserService"/>
    <fullyQualifiedTypeName name="java.lang.Object"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="kr.ch12.oauth2.KakaoInfo"/>
    <fullyQualifiedTypeName name="kr.ch12.repository.UserRepository"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="kr.ch12.entity.UserEntity"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.user.OAuth2User"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.authentication.OAuth2AuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2AuthorizedClient"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
</qualifiedTypeNameHistroy>
